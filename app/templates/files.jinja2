{% extends "base_static.jinja2" %}

{% block title %}
    {% trans %}File manager{% endtrans %}
{% endblock title %}

{% block content %}

{% if base_path == '.' %}
    {{ page_heading(gettext('File manager')) }}
{% else %}
    {% if parent_path == '.' %}
        {# Not necessary, but looks better #}
        {% set back_url = '/files' %}
    {% elif parent_path %}
        {% set back_url = '/files?path=' + (parent_path|urlencode) %}
    {% endif %}
    {{ page_heading(gettext('Files in: %(dir)s', dir=base_path), back_url=back_url) }}
{% endif %}

{% if base_path == '.' %}
    <p>{% trans %}To create a new playlist, use the <a href="/playlists">playlist manager</a>.{% endtrans %}</p>
{% else %}
    {% if write_permission %}
        <table>
            <tbody>
                <form method="POST" action="/files/upload" enctype="multipart/form-data">
                    <input type="hidden" name="csrf" value="{{ csrf_token }}">
                    <input type="hidden" name="dir" value="{{ base_path }}">
                    <tr>
                        <td>
                            {% trans %}Upload files{% endtrans %}
                        </td>
                        <td>
                            <input type="file" name="upload" accept="{{ music_extensions }}" multiple>
                        </td>
                        <td>
                            <input type="submit" value="{% trans %}Upload{% endtrans %}">
                        </td>
                    </tr>
                </form>
                <form method="POST" action="/files/mkdir">
                    <input type="hidden" name="csrf" value="{{ csrf_token }}">
                    <input type="hidden" name="path" value="{{ base_path }}">
                    <tr>
                        <td>
                            {% trans %}Create directory{% endtrans %}
                        </td>
                        <td>
                            <input type="text" name="dirname" placeholder="{% trans %}Directory name{% endtrans %}">
                        </td>
                        <td>
                            <input type="submit" value="{% trans %}Create{% endtrans %}">
                        </td>
                    </tr>
                </form>
            </tbody>

        </table>
    {% else %}
        <p>{% trans %}You don't have permission to upload files or create directories here.{% endtrans %}</p>
    {% endif %}
{% endif %}
<form method="GET">
    <input type="hidden" name="path" value="{{ base_path }}">
    {% if show_trashed %}
        <input type="submit" value="{% trans %}Show regular files{% endtrans %}">
    {% else %}
        <input type="hidden" name="trash">
        <input type="submit" value="{% trans %}Show trashed files{% endtrans %}">
    {% endif %}
</form>

<br>

<div id="dropzone">[experimental drag & drop file uploader]</div>

<table class="table">
    <thead>
        <tr>
            <th>{% trans %}Type{% endtrans %}</th>
            <th>{% trans %}File name{% endtrans %}</th>
            <th class="collapse-col">{% trans %}Artists{% endtrans %}</th>
            <th class="collapse-col">{% trans %}Title{% endtrans %}</th>
            {% if write_permission %}
                {% if show_trashed %}
                    {% set action_count = 2 %}
                {% else %}
                    {% set action_count = 3 %}
                {% endif %}
            {% else %}
                {% set action_count = 1 %}
            {% endif %}
            <th colspan="{{ action_count }}">{% trans %}Actions{% endtrans %}</th>
        </tr>
    </thead>

    <tbody>
        {% for file in files %}
        <tr>
            {% if file['type'] == 'dir' %}
            <td class="icon-col">
                {{ icon('folder') }}
            </td>
            <td>
                <a href="?path={{ file['path']|urlencode }}">{{ file.name }}/</a>
            </td>
            <td class="collapse-col"></td>
            <td class="collapse-col"></td>
            {% elif file['type'] == 'music' %}
            <td class="icon-col">
                <div class="icon" style="background-image: url('/static/icon/music.svg')"></div>
            </td>
            <td>
                {{ file.name }}
            </td>
            <td class="collapse-col">{{ file['artist'] }}</td>
            <td class="collapse-col">{{ file['title'] }}</td>
            {% else %}
            <td class="icon-col">
                <div class="icon" style="background-image: url('/static/icon/file-question.svg')"></div>
            </td>
            <td>
                {{ file.name }}
            </td>
            <td class="collapse-col"></td>
            <td class="collapse-col"></td>
            {% endif %}

            {% if write_permission %}
                {% if show_trashed %}
                    <td class="button-col">
                        <form method="POST" action="/files/rename" class="inline-block">
                            <input type="hidden" name="csrf" value="{{ csrf_token }}">
                            <input type="hidden" name="path" value="{{ file['path'] }}">
                            <input type="hidden" name="new-name" value="{{ file['name'][7:] }}">
                            {{ icon_button('delete-restore', title=gettext('Restore file from trash')) }}
                        </form>
                    </td>
                {% else %}
                    <td class="button-col">
                        <form method="GET" action="/files/rename" class="inline-block">
                            <input type="hidden" name="path" value="{{ file['path'] }}">
                            {% if base_path == '.' %}
                                <input type="hidden" name="back_url" value="/files">
                            {% else %}
                                <input type="hidden" name="back_url" value="/files?path={{ base_path }}">
                            {% endif %}
                            {{ icon_button('rename-box', title=gettext('Rename file')) }}
                        </form>
                    </td>

                    <td class="button-col">
                        <form method="POST" action="/files/rename" class="inline-block">
                            <input type="hidden" name="csrf" value="{{ csrf_token }}">
                            <input type="hidden" name="path" value="{{ file['path'] }}">
                            <input type="hidden" name="new-name" value=".trash.{{ file['name'] }}">
                            {{ icon_button('delete', title=gettext('Move file to trash')) }}
                        </form>
                    </td>
                {% endif %}
            {% endif %}

            <td class="button-col">
                {% if file['type'] != 'dir' %}
                    <form method="GET" action="/files/download" class="inline-block">
                        <input type="hidden" name="path" value="{{ file['path'] }}">
                        {{ icon_button('download', title=gettext('Download original file')) }}
                    </form>
                {% endif %}
            </td>

            {# <td class="button-col">
                {% if file['type'] != 'dir' %}
                    <form method="GET" action="/track/audio" class="inline-block">
                        <input type="hidden" name="type" value="mp3_with_metadata">
                        <input type="hidden" name="path" value="{{ file['path'] }}">
                        {{ icon_button('earbuds', title=gettext('Download transcoded MP3 with metadata')) }}
                    </form>
                {% endif %}
            </td> #}
        </tr>
        {% endfor %}
    </tbody>
</table>

<input type="hidden" id="upload_csrf" value="{{ csrf_token }}">
<input type="hidden" id="upload_dir" value="{{ base_path }}">

<style>
#dropzone {
    width: min(100rem, 100%);
    height: 100px;
    border: 1px dotted grey;
}

#dropzone.hovering {
    border: 1px solid blue;
}
</style>

<script>


const uploadQueue = [];

async function processQueue() {
    const file = uploadQueue.shift();
    console.log('Uploading file', file.name);

    const formData = new FormData();
    formData.append('csrf', document.getElementById('upload_csrf').value);
    formData.append('dir', document.getElementById('upload_dir').value)
    formData.append('upload', file);

    const response = await fetch('/files/upload', {
        method: 'POST',
        body: formData,
        redirect: 'manual',
    });

    if (!response.ok) {
        console.log('Error during upload, add to queue');
        uploadQueue.push(file);
    }

    if (uploadQueue.length > 0) {
        processQueue();
    }
}

document.addEventListener('DOMContentLoaded', () => {

    const dropzone = document.getElementById("dropzone");
    dropzone.ondragenter = (event) => {
        //event.stopPropagation();
        event.preventDefault(); // must be called for dropzone to be a valid drop target
        //dropzone.classList.add('hovering');
        console.log('ondragenter');
    }

    dropzone.ondragover = (event) => {
        //event.stopPropagation();
        event.preventDefault(); // must be called for dropzone to be a valid drop target
        event.dataTransfer.dropEffect = 'copy';
        console.log('ondragover');
    }

    dropzone.ondragleave = () => {
        dropzone.classList.remove('hovering');
        console.log('ondragleave');
    }

    dropzone.ondrop = async function(event) {
        event.preventDefault(); // must be called to prevent default behaviour
        dropzone.classList.remove('hovering');

        console.log('ondrop');

        const files = event.dataTransfer.files;
        console.log('number of files', files.length);
        for (const file of files) {
            uploadFile(file);
        }
    }
});
</script>

{% endblock content %}
