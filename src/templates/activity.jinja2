{% extends "base_static.jinja2" %}

{% block title %}
    {% trans %}Activity{% endtrans %}
{% endblock title %}

{% block content %}

{{ page_heading(gettext('Activity')) }}

<h2>{% trans %}Now playing{% endtrans %}</h2>

<div class="hidden" id="nothing-playing-text">{% trans %}No one is playing music.{% endtrans %}</div>

<div class="card-container" id="now-playing"></div>

<h2>{% trans %}Playback history{% endtrans %}</h2>

<table class="table">
    <thead>
        <tr>
            <th>
                {% trans %}Time{% endtrans %}
            </th>
            <th>
                {% trans %}User{% endtrans %}
            </th>
            <th>
                {% trans %}Playlist{% endtrans %}
            </th>
            <th>
                {% trans %}Track{% endtrans %}
            </th>
        </tr>
    </thead>
    <tbody id="tbody-history">
    </tbody>
</table>

<a href="/activity_all" style="display: block; margin-top: .5rem">{% trans %}View more{% endtrans %}</a>

<style>
.card-container {
    display: flex;
    flex-wrap: wrap;
    gap: 1rem;
}

.card {
    background: rgba(0, 0, 0, 0.5);
    border-radius: var(--border-radius-amount);
    overflow: hidden; /* prevent header from overlapping rounded corners */
    flex: 1; /* grow to fill container width */
    min-width: min(100%, 25rem);
}

.card .card-header {
    background: rgba(0, 0, 0, 0.2);
    padding: .5rem;
    font-size: 1.3em;
}

.card .card-body {
    padding: .5rem;
}

.card-progress {
    height: 2px;
    background-color: white;
}
</style>

<script src="/static/js/base.js"></script>

<script>
function getNowPlayingCardHtml(info) {
    const card = document.createElement('div');
    card.classList.add('card');

    const cardHeader = document.createElement('div');
    cardHeader.classList.add('card-header');
    cardHeader.textContent = info.username;
    card.append(cardHeader);

    const cardBody = document.createElement('div');
    cardBody.classList.add('card-body');
    cardBody.style.display = 'flex';
    card.append(cardBody);

    const imageThumb = '/get_album_cover?quality=tiny&path=' + encodeURIComponent(info.path);
    const imageFull = '/get_album_cover?quality=high&path=' + encodeURIComponent(info.path);

    const imgOuter = document.createElement('a');
    imgOuter.href = imageFull;
    imgOuter.style.display = 'block';
    imgOuter.style.height = '8rem';
    imgOuter.style.width = '8rem';
    imgOuter.style.borderRadius = 'var(--border-radius-amount)';
    imgOuter.style.background = `url("${imageThumb}") no-repeat center`;
    imgOuter.style.backgroundSize = 'cover';

    const imgInner = document.createElement('div');
    imgInner.style.width = '100%';
    imgInner.style.height = '100%';

    if (info.paused) {
        imgInner.style.background = `url("/static/icon/pause.svg") no-repeat center`;
        imgInner.style.backgroundSize = 'cover';
        imgInner.style.filter = 'invert(1)';
    }

    imgOuter.append(imgInner);
    cardBody.append(imgOuter);

    const infoDiv = document.createElement('div');
    infoDiv.style.marginLeft = '.5rem';
    cardBody.append(infoDiv);

    if (info.title && info.artists) {
        const titleDiv = document.createElement('div');
        titleDiv.style.fontSize = '1.3em';
        titleDiv.textContent = info.title;
        const artistDiv = document.createElement('div');
        artistDiv.style.fontSize = '1.1em';
        artistDiv.textContent = info.artists.join(', ');
        infoDiv.append(titleDiv, artistDiv);
    } else {
        const fallbackDiv = document.createElement('div');
        fallbackDiv.style.fontSize = '1.1em';
        fallbackDiv.textContent = info.fallback_title;
        infoDiv.append(fallbackDiv);
    }

    const playlistDiv = document.createElement('div');
    playlistDiv.classList.add('secondary');
    playlistDiv.style.marginTop = '.5rem';
    playlistDiv.textContent = info.playlist;
    infoDiv.append(playlistDiv);

    const progressBar = document.createElement('div');
    progressBar.classList.add('card-progress');
    progressBar.style.width = info.progress + '%';
    card.append(progressBar);

    return card;
}

function getHistoryRowHtml(info) {
    const colTime = document.createElement('td');
    colTime.textContent = info.time_ago;

    const colUsername = document.createElement('td');
    colUsername.textContent = info.username;

    const colPlaylist = document.createElement('td');
    colPlaylist.textContent = info.playlist;

    const colTitle = document.createElement('td');
    colTitle.textContent = info.title;

    const row = document.createElement('tr');
    row.append(colTime, colUsername, colPlaylist, colTitle);

    return row;
}

const nowPlayingDiv = document.getElementById('now-playing');
const nothingPlayingText = document.getElementById('nothing-playing-text').textContent;
const historyTable = document.getElementById('tbody-history');

async function updateNowPlaying() {
    const response = await fetch('/activity_data');
    checkResponseCode(response);
    const json = await response.json();
    console.debug('Fetched data', json);

    const cards = json.now_playing.map(getNowPlayingCardHtml);
    if (cards.length > 0) {
        nowPlayingDiv.replaceChildren(...cards);
    } else {
        nowPlayingDiv.textContent = nothingPlayingText;
    }

    const rows = json.history.map(getHistoryRowHtml);
    historyTable.replaceChildren(...rows);
}

document.addEventListener('DOMContentLoaded', () => {
    updateNowPlaying();
    setInterval(updateNowPlaying, 5_000);
    addEventListener("visibilitychange", event => {
        if (!document.hidden) {
            updateNowPlaying();
        }
    });
});


</script>

{% endblock content %}
