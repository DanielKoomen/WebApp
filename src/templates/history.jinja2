{% extends "base_static.jinja2" %}

{% block title %}
    {% trans %}Playback history{% endtrans %}
{% endblock title %}

{% block content %}

{{ page_heading(gettext('Playback history')) }}

<h2>{% trans %}Now playing{% endtrans %}</h2>

<div class="hidden" id="nothing-playing-text">{% trans %}No one is playing music.{% endtrans %}</div>

<div class="card-container" id="now-playing"></div>

<h2>{% trans %}History{% endtrans %}</h2>

<table class="table">
    <thead>
        <tr>
            <th>
                {% trans %}Time{% endtrans %}
            </th>
            <th>
                {% trans %}User{% endtrans %}
            </th>
            <th>
                {% trans %}Playlist{% endtrans %}
            </th>
            <th>
                {% trans %}Track{% endtrans %}
            </th>
        </tr>
    </thead>
    <tbody>
        {% for track in history %}
            <tr>
                <td class="format-timestamp">{{ track['time'] }}</td>
                <td>{{ track['username'] }}</td>
                <td>{{ track['playlist'] }}</td>
                <td>{{ track['title'] }}</td>
            </tr>
        {% endfor %}
    </tbody>
</table>

<script src="/static/js/format.js"></script>

<script>

function getCardHtml(info) {
    const card = document.createElement('div');
    card.classList.add('card');

    const cardHeader = document.createElement('div');
    cardHeader.classList.add('card-header');
    cardHeader.textContent = info.username;
    card.append(cardHeader);

    const cardBody = document.createElement('div');
    cardBody.classList.add('card-body');
    cardBody.style.display = 'flex';
    card.append(cardBody);

    const img = document.createElement('img');
    img.src = info.image;
    img.height = 100;
    img.width = 100;
    img.style.borderRadius = 'var(--border-radius-amount)';
    cardBody.append(img);

    const infoDiv = document.createElement('div');
    infoDiv.style.marginLeft = '.5rem';
    cardBody.append(infoDiv);

    if (info.title && info.artists) {
        const titleDiv = document.createElement('div');
        titleDiv.style.fontSize = '1.3em';
        titleDiv.textContent = info.title;
        const artistDiv = document.createElement('div');
        artistDiv.style.fontSize = '1.1em';
        artistDiv.textContent = info.artists;
        infoDiv.append(titleDiv, artistDiv);
    } else {
        const fallbackDiv = document.createElement('div');
        fallbackDiv.style.fontSize = '1.1em';
        fallbackDiv.textContent = fallback_title;
        infoDiv.append(fallbackDiv);
    }

    const playlistDiv = document.createElement('div');
    playlistDiv.classList.add('secondary');
    playlistDiv.style.marginTop = '.5rem';
    playlistDiv.textContent = info.playlist;
    infoDiv.append(playlistDiv);

    const progressBar = document.createElement('div');
    progressBar.classList.add('card-progress');
    progressBar.style.width = info.progress + '%';
    card.append(progressBar);

    return card;
}

const nowPlayingDiv = document.getElementById('now-playing');
const nothingPlayingText = document.getElementById('nothing-playing-text').textContent;

async function updateNowPlaying() {
    const response = await fetch('/history_now_playing');
    const items = await response.json();
    console.debug('Fetched now playing', items);
    const cards = items.filter(e => !e.paused).map(getCardHtml);
    if (cards.length > 0) {
        nowPlayingDiv.replaceChildren(...cards);
    } else {
        nowPlayingDiv.textContent = nothingPlayingText;
    }
}

document.addEventListener('DOMContentLoaded', () => {
    updateNowPlaying();
    setInterval(updateNowPlaying, 10_000);
});

</script>

{% endblock content %}
